type Asset implements Node {
    id: UUID!
    title: String
    serialNumber: String!
    type: AssetType!
    assignee: Employee
    waybillDate: ZonedDateTime!
    location: Location
    tagNumber: String
    nextActionDate: ZonedDateTime
    actionOnName: String
    archivedDate: ZonedDateTime
    comment: String
}

input AssetsInput {
    where: AssetWhereInput
    pagination: PageInput
    sort: [AssetSortEnum!] = [waybillDate_DESC]
}

input AssetWhereInput {
    """
    Filters by title OR serialNumber OR tagNumber
    """
    query: String
    type: NodesInput
    location: NodesInput
    assignee: NodesInput
    archived: Boolean = false # asset.archivedDate is not null - TRUE
}

enum AssetSortEnum {
    waybillDate_ASC
    waybillDate_DESC
}

input AssetInput {
    id: UUID!
}

type AssetPayload {
    asset: Asset
}

type ArchiveAssetPayload {
    asset: Node
}

input ArchiveAssetInput {
    asset: NodeInput!
}

type AssetConnectionPayload implements ConnectionPayload {
    items: [Asset!]!
    pageInfo: PageInfo!
    totalItems: Int!
}

input CreateAssetInput {
    title: String!
    serialNumber: String!
    type: NodeInput!
    assignee: NodeInput
    location:NodeInput
    tagNumber: String
    waybillDate: ZonedDateTime!
    actionOnName: String
    nextActionDate: ZonedDateTime
    archivedDate: ZonedDateTime
    comment: String
}

input UpdateAssetInput {
    id: UUID!
    title: String!
    serialNumber: String!
    type: NodeInput!
    assignee: NodeInput
    waybillDate: ZonedDateTime!
    location:NodeInput
    tagNumber: String
    archivedDate: ZonedDateTime
    nextActionDate: ZonedDateTime
    actionOnName: String
    comment: String
}
