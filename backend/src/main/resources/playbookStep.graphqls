type PlaybookStep implements Node {
    id: UUID!
    title: String!
    type: PlaybookStepType!
    taskList: PlaybookTaskList
    video: PlaybookVideo
    resource: PlaybookResource
}

type PlaybookStepPayload {
    playbookStep: PlaybookStep
}

type PlaybookStepTask {
    title: String
}

enum PlaybookStepType {
    TASK_LIST
    VIDEO
    RESOURCE
}

type PlaybookVideo implements Node {
    id: UUID!
    url: URL!
    description: String!
}

type PlaybookResource implements Node {
    id: UUID!
    resource: Resource!
}

type DeletePlaybookStepPayload {
    step: Node
}

input PatchPlaybookStepInput {
    id: UUID!
    title: String
}

input DeletePlaybookStepInput {
    id: UUID!
}

input CreatePlaybookStepInput {
    title: String!
    """
    One field that corresponds the type should be required - or taskList or video or resource
    """
    type: PlaybookStepType!
    taskList: CreatePlaybookTaskListInput
    video: CreatePlaybookVideoInput
    resource: CreatePlaybookResourceInput
}

input UpdatePlaybookStepInput {
    id: UUID!
    title: String!
    """
    One field that corresponds the type should be required - or taskList or video or resource
    """
    type: PlaybookStepType!
    taskList: UpdatePlaybookTaskListInput
    video: UpdatePlaybookVideoInput
    resource: UpdatePlaybookResourceInput
}

input CreatePlaybookVideoInput {
    url: URL! # FE will show only YouTube embeded videos
    description: String!
}

input CreatePlaybookResourceInput {
    resource: ResourceInput!
}

scalar URL

