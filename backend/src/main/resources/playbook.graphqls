type Playbook implements Node {
    id: UUID!
    title: String!
    image: Resource!
    steps: [PlaybookStep!]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

enum PlaybookSort {
    createdAt_DESC
    createdAt_ASC
}

type PlaybookPayload {
    playbook: Playbook
}

type PlaybookConnectionPayload implements ConnectionPayload {
    items: [Playbook!]!
    pageInfo: PageInfo!
    totalItems: Int!
}

input DeletePlaybookInput {
    id: UUID!
}

input CreatePlaybookInput {
    title: String!
    image: ResourceInput!
}

input PlaybookInput {
    id: UUID!
}

input PlaybooksInput {
    where: PlaybooksWhereInput
    pagination: PageInput
    sort: [PlaybookSort!] = createdAt_DESC
}

input PlaybooksWhereInput {
    title: String!
}

input UpdatePlaybookVideoInput {
    url: Url! # FE will show only YouTube embeded videos
    description: String!
}

input PatchPlaybookInput {
    id: UUID!
    title: String
    image: ResourceInput
}

input UpdatePlaybookResourceInput {
    resource: ResourceInput!
}

input PatchPlaybookVideoInput {
    id: UUID!
    url: Url
    description: String
}

type PlaybookVideoPayload {
    playbookVideo: PlaybookVideo
}

type DeletePlaybookPayload {
    playbook: Node
}



