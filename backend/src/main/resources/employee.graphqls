type Employee implements Node {
	uuid: UUID!
	firstName: String
	lastName: String
	role: String
	birthday: ZonedDateTime
	position: EmployeePosition
	location: String
}


type EmployeeConnectionPayload implements ConnectionPayload {
	items: [Employee!]!
	pageInfo: PageInfo!
	totalItems: Int!
}

input CreateEmployeeInput {
	firstName: String!
	lastName: String!
	birthday: ZonedDateTime
	position: UUID
	location: UUID
}


type EmployeePayload {
	item: Employee
}

type EmployeePosition implements Node{
	uuid: UUID!
	name:String
}
input DeleteEmployeePositionInput{
	uuid:UUID!
}

input CreateEmployeePositionInput{
    name:String!
}

input UpdateEmployeePositionInput{
	uuid:UUID!
	name:String!
}

type CreateEmployeePositionPayload{
	item:EmployeePosition
}

type UpdateEmployeePositionPayload{
	item:EmployeePosition
}


type DeleteEmployeePositionPayload{
	employeePosition: Node!
}

input EmployeesInput {
	where: EmployeeWhereInput
	pagination: PageInput
}

input EmployeeWhereInput {
	location: NodeInput
}

